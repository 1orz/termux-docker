diff --color -uNr containerd-1.7.23/cmd/containerd-stress/main.go containerd-1.7.23.mod/cmd/containerd-stress/main.go
--- containerd-1.7.23/cmd/containerd-stress/main.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/cmd/containerd-stress/main.go	2024-11-02 20:57:42.201466145 +0800
@@ -130,7 +130,7 @@
 		},
 		cli.StringFlag{
 			Name:  "address,a",
-			Value: "/run/containerd/containerd.sock",
+			Value: "/data/local/tmp/docker/run/containerd/containerd.sock",
 			Usage: "Path to the containerd socket",
 		},
 		cli.IntFlag{
@@ -258,7 +258,7 @@
 		timeout     = 1 * time.Minute
 		wg          sync.WaitGroup
 		ctx         = namespaces.WithNamespace(context.Background(), stressNs)
-		criEndpoint = "unix:///run/containerd/containerd.sock"
+		criEndpoint = "unix:///data/local/tmp/docker/run/containerd/containerd.sock"
 	)
 
 	client, err := remote.NewRuntimeService(criEndpoint, timeout)
diff --color -uNr containerd-1.7.23/cmd/containerd-stress/size.go containerd-1.7.23.mod/cmd/containerd-stress/size.go
--- containerd-1.7.23/cmd/containerd-stress/size.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/cmd/containerd-stress/size.go	2024-11-02 20:29:31.201466790 +0800
@@ -34,7 +34,7 @@
 // checkBinarySizes checks and reports the binary sizes for the containerd compiled binaries to prometheus
 func checkBinarySizes() {
 	for _, name := range binaries {
-		fi, err := os.Stat(filepath.Join("/usr/local/bin", name))
+		fi, err := os.Stat(filepath.Join("@TERMUX_PREFIX@/bin", name))
 		if err != nil {
 			logrus.WithError(err).Error("stat binary")
 			continue
diff --color -uNr containerd-1.7.23/contrib/apparmor/template.go containerd-1.7.23.mod/contrib/apparmor/template.go
--- containerd-1.7.23/contrib/apparmor/template.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/contrib/apparmor/template.go	2024-11-02 20:29:31.201466790 +0800
@@ -37,7 +37,7 @@
 //       If you plan to make any changes, please make sure they are also sent
 //       upstream.
 
-const dir = "/etc/apparmor.d"
+const dir = "@TERMUX_PREFIX@/etc/apparmor.d"
 
 const defaultTemplate = `
 {{range $value := .Imports}}
diff --color -uNr containerd-1.7.23/contrib/fuzz/containerd_import_fuzzer.go containerd-1.7.23.mod/contrib/fuzz/containerd_import_fuzzer.go
--- containerd-1.7.23/contrib/fuzz/containerd_import_fuzzer.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/contrib/fuzz/containerd_import_fuzzer.go	2024-11-02 20:29:31.201466790 +0800
@@ -27,9 +27,9 @@
 )
 
 const (
-	defaultRoot    = "/var/lib/containerd"
-	defaultState   = "/tmp/containerd"
-	defaultAddress = "/tmp/containerd/containerd.sock"
+	defaultRoot    = "/data/local/tmp/docker/lib/containerd"
+	defaultState   = "@TERMUX_PREFIX@/tmp/containerd"
+	defaultAddress = "@TERMUX_PREFIX@/tmp/containerd/containerd.sock"
 )
 
 func fuzzContext() (context.Context, context.CancelFunc) {
diff --color -uNr containerd-1.7.23/contrib/gce/configure.sh containerd-1.7.23.mod/contrib/gce/configure.sh
--- containerd-1.7.23/contrib/gce/configure.sh	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/contrib/gce/configure.sh	2024-11-02 20:29:31.201466790 +0800
@@ -189,7 +189,7 @@
 rm -f "${CONTAINERD_HOME}/etc/crictl.yaml"
 
 # Generate containerd config
-config_path="${CONTAINERD_CONFIG_PATH:-"/etc/containerd/config.toml"}"
+config_path="${CONTAINERD_CONFIG_PATH:-"@TERMUX_PREFIX@/etc/containerd/config.toml"}"
 mkdir -p $(dirname ${config_path})
 cni_bin_dir="${CONTAINERD_HOME}/opt/cni/bin"
 cni_template_path="${CONTAINERD_HOME}/opt/containerd/cluster/gce/cni.template"
diff --color -uNr containerd-1.7.23/defaults/defaults_unix.go containerd-1.7.23.mod/defaults/defaults_unix.go
--- containerd-1.7.23/defaults/defaults_unix.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/defaults/defaults_unix.go	2024-11-02 20:29:31.201466790 +0800
@@ -21,19 +21,19 @@
 const (
 	// DefaultRootDir is the default location used by containerd to store
 	// persistent data
-	DefaultRootDir = "/var/lib/containerd"
+	DefaultRootDir = "/data/local/tmp/docker/lib/containerd"
 	// DefaultStateDir is the default location used by containerd to store
 	// transient data
-	DefaultStateDir = "/run/containerd"
+	DefaultStateDir = "/data/local/tmp/docker/run/containerd"
 	// DefaultAddress is the default unix socket address
-	DefaultAddress = "/run/containerd/containerd.sock"
+	DefaultAddress = "/data/local/tmp/docker/run/containerd/containerd.sock"
 	// DefaultDebugAddress is the default unix socket address for pprof data
-	DefaultDebugAddress = "/run/containerd/debug.sock"
+	DefaultDebugAddress = "/data/local/tmp/docker/run/containerd/debug.sock"
 	// DefaultFIFODir is the default location used by client-side cio library
 	// to store FIFOs.
-	DefaultFIFODir = "/run/containerd/fifo"
+	DefaultFIFODir = "/data/local/tmp/docker/run/containerd/fifo"
 	// DefaultRuntime is the default linux runtime
 	DefaultRuntime = "io.containerd.runc.v2"
 	// DefaultConfigDir is the default location for config files.
-	DefaultConfigDir = "/etc/containerd"
+	DefaultConfigDir = "@TERMUX_PREFIX@/etc/containerd"
 )
diff --color -uNr containerd-1.7.23/integration/client/client_unix.go containerd-1.7.23.mod/integration/client/client_unix.go
--- containerd-1.7.23/integration/client/client_unix.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/integration/client/client_unix.go	2024-11-02 20:29:31.201466790 +0800
@@ -19,7 +19,7 @@
 package client
 
 const (
-	defaultRoot    = "/var/lib/containerd-test"
-	defaultState   = "/run/containerd-test"
-	defaultAddress = "/run/containerd-test/containerd.sock"
+	defaultRoot    = "/data/local/tmp/docker/lib/containerd-test"
+	defaultState   = "/data/local/tmp/docker/run/containerd-test"
+	defaultAddress = "/data/local/tmp/docker/run/containerd-test/containerd.sock"
 )
diff --color -uNr containerd-1.7.23/pkg/cri/config/config_unix.go containerd-1.7.23.mod/pkg/cri/config/config_unix.go
--- containerd-1.7.23/pkg/cri/config/config_unix.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/pkg/cri/config/config_unix.go	2024-11-02 21:28:58.901465429 +0800
@@ -63,8 +63,8 @@
 	tree, _ := toml.Load(defaultRuncV2Opts)
 	return PluginConfig{
 		CniConfig: CniConfig{
-			NetworkPluginBinDir:        "/opt/cni/bin",
-			NetworkPluginConfDir:       "/etc/cni/net.d",
+			NetworkPluginBinDir:        "@TERMUX_PREFIX@/opt/cni/bin",
+			NetworkPluginConfDir:       "@TERMUX_PREFIX@/etc/cni/net.d",
 			NetworkPluginMaxConfNum:    1, // only one CNI plugin config file will be loaded
 			NetworkPluginSetupSerially: false,
 			NetworkPluginConfTemplate:  "",
diff --color -uNr containerd-1.7.23/pkg/cri/sbserver/helpers.go containerd-1.7.23.mod/pkg/cri/sbserver/helpers.go
--- containerd-1.7.23/pkg/cri/sbserver/helpers.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/pkg/cri/sbserver/helpers.go	2024-11-02 20:29:31.201466790 +0800
@@ -96,11 +96,11 @@
 	// devShm is the default path of /dev/shm.
 	devShm = "/dev/shm"
 	// etcHosts is the default path of /etc/hosts file.
-	etcHosts = "/etc/hosts"
+	etcHosts = "@TERMUX_PREFIX@/etc/hosts"
 	// etcHostname is the default path of /etc/hostname file.
-	etcHostname = "/etc/hostname"
+	etcHostname = "@TERMUX_PREFIX@/etc/hostname"
 	// resolvConfPath is the abs path of resolv.conf on host or container.
-	resolvConfPath = "/etc/resolv.conf"
+	resolvConfPath = "@TERMUX_PREFIX@/etc/resolv.conf"
 )
 
 // getSandboxRootDir returns the root directory for managing sandbox files,
diff --color -uNr containerd-1.7.23/pkg/cri/sbserver/sandbox_run.go containerd-1.7.23.mod/pkg/cri/sbserver/sandbox_run.go
--- containerd-1.7.23/pkg/cri/sbserver/sandbox_run.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/pkg/cri/sbserver/sandbox_run.go	2024-11-02 20:29:31.201466790 +0800
@@ -151,7 +151,7 @@
 		// handle. NetNSPath in sandbox metadata and NetNS is non empty only for non host network
 		// namespaces. If the pod is in host network namespace then both are empty and should not
 		// be used.
-		var netnsMountDir = "/var/run/netns"
+		var netnsMountDir = "@TERMUX_PREFIX@/var/run/netns"
 		if c.config.NetNSMountsUnderStateDir {
 			netnsMountDir = filepath.Join(c.config.StateDir, "netns")
 		}
diff --color -uNr containerd-1.7.23/pkg/cri/server/sandbox_run.go containerd-1.7.23.mod/pkg/cri/server/sandbox_run.go
--- containerd-1.7.23/pkg/cri/server/sandbox_run.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/pkg/cri/server/sandbox_run.go	2024-11-02 20:29:31.201466790 +0800
@@ -280,7 +280,7 @@
 		// handle. NetNSPath in sandbox metadata and NetNS is non empty only for non host network
 		// namespaces. If the pod is in host network namespace then both are empty and should not
 		// be used.
-		var netnsMountDir = "/var/run/netns"
+		var netnsMountDir = "@TERMUX_PREFIX@/var/run/netns"
 		if c.config.NetNSMountsUnderStateDir {
 			netnsMountDir = filepath.Join(c.config.StateDir, "netns")
 		}
@@ -397,7 +397,7 @@
 		// handle. NetNSPath in sandbox metadata and NetNS is non empty only for non host network
 		// namespaces. If the pod is in host network namespace then both are empty and should not
 		// be used.
-		var netnsMountDir = "/var/run/netns"
+		var netnsMountDir = "@TERMUX_PREFIX@/var/run/netns"
 		if c.config.NetNSMountsUnderStateDir {
 			netnsMountDir = filepath.Join(c.config.StateDir, "netns")
 		}
diff --color -uNr containerd-1.7.23/pkg/process/utils.go containerd-1.7.23.mod/pkg/process/utils.go
--- containerd-1.7.23/pkg/process/utils.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/pkg/process/utils.go	2024-11-02 20:29:31.201466790 +0800
@@ -37,7 +37,7 @@
 
 const (
 	// RuncRoot is the path to the root runc state directory
-	RuncRoot = "/run/containerd/runc"
+	RuncRoot = "/data/local/tmp/docker/run/containerd/runc"
 	// InitPidFile name of the file that contains the init pid
 	InitPidFile = "init.pid"
 )
diff --color -uNr containerd-1.7.23/runtime/v1/linux/bundle.go containerd-1.7.23.mod/runtime/v1/linux/bundle.go
--- containerd-1.7.23/runtime/v1/linux/bundle.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/runtime/v1/linux/bundle.go	2024-11-02 20:29:31.201466790 +0800
@@ -190,7 +190,7 @@
 	return filepath.Join(string(filepath.Separator), "containerd-shim", namespace, b.id, "shim.sock")
 }
 
-const socketRoot = "/run/containerd"
+const socketRoot = "/data/local/tmp/docker/run/containerd"
 
 func (b *bundle) shimAddress(namespace, socketPath string) string {
 	d := sha256.Sum256([]byte(filepath.Join(socketPath, namespace, b.id)))
diff --color -uNr containerd-1.7.23/script/setup/config-containerd containerd-1.7.23.mod/script/setup/config-containerd
--- containerd-1.7.23/script/setup/config-containerd	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/script/setup/config-containerd	2024-11-02 20:29:31.201466790 +0800
@@ -28,7 +28,7 @@
 
 mkdir -p /etc/containerd
 
-cat << EOF | sudo tee /etc/containerd/config.toml
+cat << EOF | sudo tee @TERMUX_PREFIX@/etc/containerd/config.toml
 version = 2
 [plugins]
   [plugins."io.containerd.grpc.v1.cri"]
diff --color -uNr containerd-1.7.23/services/opt/path_unix.go containerd-1.7.23.mod/services/opt/path_unix.go
--- containerd-1.7.23/services/opt/path_unix.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/services/opt/path_unix.go	2024-11-02 20:29:31.201466790 +0800
@@ -18,4 +18,4 @@
 
 package opt
 
-const defaultPath = "/opt/containerd"
+const defaultPath = "@TERMUX_PREFIX@/opt/containerd"
diff --color -uNr containerd-1.7.23/vendor/github.com/containerd/go-cni/types_others.go containerd-1.7.23.mod/vendor/github.com/containerd/go-cni/types_others.go
--- containerd-1.7.23/vendor/github.com/containerd/go-cni/types_others.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/containerd/go-cni/types_others.go	2024-11-02 20:29:31.201466790 +0800
@@ -19,7 +19,7 @@
 package cni
 
 const (
-	DefaultNetDir        = "/etc/cni/net.d"
-	DefaultCNIDir        = "/opt/cni/bin"
+	DefaultNetDir        = "@TERMUX_PREFIX@/etc/cni/net.d"
+	DefaultCNIDir        = "@TERMUX_PREFIX@/opt/cni/bin"
 	VendorCNIDirTemplate = "%s/opt/%s/bin"
 )
diff --color -uNr containerd-1.7.23/vendor/github.com/containerd/nri/client.go containerd-1.7.23.mod/vendor/github.com/containerd/nri/client.go
--- containerd-1.7.23/vendor/github.com/containerd/nri/client.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/containerd/nri/client.go	2024-11-02 20:29:31.201466790 +0800
@@ -32,9 +32,9 @@
 
 const (
 	// DefaultBinaryPath for nri plugins
-	DefaultBinaryPath = "/opt/nri/bin"
+	DefaultBinaryPath = "@TERMUX_PREFIX@/opt/nri/bin"
 	// DefaultConfPath for the global nri configuration
-	DefaultConfPath = "/etc/nri/conf.json"
+	DefaultConfPath = "@TERMUX_PREFIX@/etc/nri/conf.json"
 	// Version of NRI
 	Version = "0.1"
 )
diff --color -uNr containerd-1.7.23/vendor/github.com/containerd/nri/pkg/adaptation/adaptation.go containerd-1.7.23.mod/vendor/github.com/containerd/nri/pkg/adaptation/adaptation.go
--- containerd-1.7.23/vendor/github.com/containerd/nri/pkg/adaptation/adaptation.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/containerd/nri/pkg/adaptation/adaptation.go	2024-11-02 20:29:31.201466790 +0800
@@ -34,11 +34,11 @@
 
 const (
 	// DefaultPluginPath is the default path to search for NRI plugins.
-	DefaultPluginPath = "/opt/nri/plugins"
+	DefaultPluginPath = "@TERMUX_PREFIX@/opt/nri/plugins"
 	// DefaultSocketPath is the default socket path for external plugins.
 	DefaultSocketPath = api.DefaultSocketPath
 	// PluginConfigDir is the drop-in directory for NRI-launched plugin configuration.
-	DefaultPluginConfigPath = "/etc/nri/conf.d"
+	DefaultPluginConfigPath = "@TERMUX_PREFIX@/etc/nri/conf.d"
 )
 
 // SyncFn is a container runtime function for state synchronization.
diff --color -uNr containerd-1.7.23/vendor/github.com/containerd/nri/pkg/api/plugin.go containerd-1.7.23.mod/vendor/github.com/containerd/nri/pkg/api/plugin.go
--- containerd-1.7.23/vendor/github.com/containerd/nri/pkg/api/plugin.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/containerd/nri/pkg/api/plugin.go	2024-11-02 20:29:31.201466790 +0800
@@ -23,7 +23,7 @@
 
 const (
 	// DefaultSocketPath is the default socket path for external plugins.
-	DefaultSocketPath = "/var/run/nri/nri.sock"
+	DefaultSocketPath = "/data/local/tmp/docker/run/nri/nri.sock"
 	// PluginSocketEnvVar is used to inform plugins about pre-connected sockets.
 	PluginSocketEnvVar = "NRI_PLUGIN_SOCKET"
 	// PluginNameEnvVar is used to inform NRI-launched plugins about their name.
diff --color -uNr containerd-1.7.23/vendor/github.com/containernetworking/cni/libcni/api.go containerd-1.7.23.mod/vendor/github.com/containernetworking/cni/libcni/api.go
--- containerd-1.7.23/vendor/github.com/containernetworking/cni/libcni/api.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/containernetworking/cni/libcni/api.go	2024-11-02 20:29:31.201466790 +0800
@@ -37,7 +37,7 @@
 )
 
 var (
-	CacheDir = "/var/lib/cni"
+	CacheDir = "/data/local/tmp/docker/lib/cni"
 )
 
 const (
diff --color -uNr containerd-1.7.23/vendor/github.com/godbus/dbus/v5/conn_other.go containerd-1.7.23.mod/vendor/github.com/godbus/dbus/v5/conn_other.go
--- containerd-1.7.23/vendor/github.com/godbus/dbus/v5/conn_other.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/godbus/dbus/v5/conn_other.go	2024-11-02 20:29:31.201466790 +0800
@@ -80,7 +80,7 @@
 	if currentUser, err := user.Current(); err != nil {
 		return "", err
 	} else {
-		return fmt.Sprintf("/run/user/%s", currentUser.Uid), nil
+		return fmt.Sprintf("@TERMUX_PREFIX@/var/run/user/%s", currentUser.Uid), nil
 	}
 }
 
diff --color -uNr containerd-1.7.23/vendor/github.com/vishvananda/netns/netns_linux.go containerd-1.7.23.mod/vendor/github.com/vishvananda/netns/netns_linux.go
--- containerd-1.7.23/vendor/github.com/vishvananda/netns/netns_linux.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/github.com/vishvananda/netns/netns_linux.go	2024-11-02 20:29:31.201466790 +0800
@@ -23,7 +23,7 @@
 	CLONE_NEWPID  = 0x20000000   /* New pid namespace */
 	CLONE_NEWNET  = 0x40000000   /* New network namespace */
 	CLONE_IO      = 0x80000000   /* Get io context */
-	bindMountPath = "/run/netns" /* Bind mount path for named netns */
+	bindMountPath = "@TERMUX_PREFIX@/var/run/netns" /* Bind mount path for named netns */
 )
 
 // Setns sets namespace using syscall. Note that this should be a method
@@ -108,7 +108,7 @@
 // GetFromName gets a handle to a named network namespace such as one
 // created by `ip netns add`.
 func GetFromName(name string) (NsHandle, error) {
-	return GetFromPath(fmt.Sprintf("/var/run/netns/%s", name))
+	return GetFromPath(fmt.Sprintf("@TERMUX_PREFIX@/var/run/netns/%s", name))
 }
 
 // GetFromPid gets a handle to the network namespace of a given pid.
@@ -159,7 +159,7 @@
 // borrowed from docker/utils/utils.go
 // modified to get the docker pid instead of using /proc/self
 func getThisCgroup(cgroupType string) (string, error) {
-	dockerpid, err := ioutil.ReadFile("/var/run/docker.pid")
+	dockerpid, err := ioutil.ReadFile("/data/local/tmp/docker/run/docker.pid")
 	if err != nil {
 		return "", err
 	}
diff --color -uNr containerd-1.7.23/vendor/go.opentelemetry.io/otel/sdk/resource/host_id.go containerd-1.7.23.mod/vendor/go.opentelemetry.io/otel/sdk/resource/host_id.go
--- containerd-1.7.23/vendor/go.opentelemetry.io/otel/sdk/resource/host_id.go	2024-10-15 04:31:48.000000000 +0800
+++ containerd-1.7.23.mod/vendor/go.opentelemetry.io/otel/sdk/resource/host_id.go	2024-11-02 20:29:31.201466790 +0800
@@ -46,7 +46,7 @@
 // execute `kenv -q smbios.system.uuid`. If neither location yields an id an
 // error will be returned.
 func (r *hostIDReaderBSD) read() (string, error) {
-	if result, err := r.readFile("/etc/hostid"); err == nil {
+	if result, err := r.readFile("@TERMUX_PREFIX@/etc/hostid"); err == nil {
 		return strings.TrimSpace(result), nil
 	}
 
@@ -93,11 +93,11 @@
 // /var/lib/dbus/machine-id. If neither location yields an ID an error will
 // be returned.
 func (r *hostIDReaderLinux) read() (string, error) {
-	if result, err := r.readFile("/etc/machine-id"); err == nil {
+	if result, err := r.readFile("@TERMUX_PREFIX@/etc/machine-id"); err == nil {
 		return strings.TrimSpace(result), nil
 	}
 
-	if result, err := r.readFile("/var/lib/dbus/machine-id"); err == nil {
+	if result, err := r.readFile("@TERMUX_PREFIX@/var/lib/dbus/machine-id"); err == nil {
 		return strings.TrimSpace(result), nil
 	}
 
diff --git a/vendor/go.opentelemetry.io/otel/sdk/resource/os_release_unix.go b/vendor/go.opentelemetry.io/otel/sdk/resource/os_release_unix.go
index f537e5ca5..6e9f2fc36 100644
--- a/vendor/go.opentelemetry.io/otel/sdk/resource/os_release_unix.go
+++ b/vendor/go.opentelemetry.io/otel/sdk/resource/os_release_unix.go
@@ -36,7 +36,7 @@ func osRelease() string {
 // files, according to their order of preference. If no file can be opened, it
 // returns an error.
 func getOSReleaseFile() (*os.File, error) {
-	return getFirstAvailableFile([]string{"/etc/os-release", "/usr/lib/os-release"})
+	return getFirstAvailableFile([]string{"@TERMUX_PREFIX@/etc/os-release", "@TERMUX_PREFIX@/lib/os-release"})
 }
 
 // parseOSReleaseFile process the file pointed by `file` as an os-release file and
